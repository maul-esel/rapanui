@GenModel(modelDirectory="rapanui.dsl/xcore-gen")

package rapanui.dsl

import rapanui.dsl.Serializer
import org.eclipse.emf.ecore.util.EcoreUtil
import java.util.stream.Collectors

type StringArray wraps String[]

class RuleSystem {
	contains Rule[] rules
	contains Definition[] definitions

	op StringArray getDefinitionNames() {
		definitions.stream().map[ name ].collect(Collectors.toList())
	}
}

class Rule {
	String name
	contains Formula[] premises
	contains Formula[] conclusions
}
class Definition {
	String name
	contains Formula[] premises
	String target
}

abstract class Formula {
	op boolean structurallyEquals(Formula other) {
		EcoreUtil.equals(this, other)
	}

	op String serialize() {
		Serializer.getInstance().serialize(this);
	}
}
class Equation extends Formula {
	contains Term left
	contains Term right
}
class Inclusion extends Formula {
	contains Term left
	contains Term right
}
class DefinitionReference extends Formula {
	contains Term target
	String definitionName
}

abstract class Term {
	op boolean structurallyEquals(Term other) {
		EcoreUtil.equals(this, other)
	}

	op String serialize() {
		Serializer.getInstance().serialize(this);
	}
}
class VariableReference extends Term {
	String variable
}
class ConstantReference extends Term {
	String constant
}
class UnaryOperation extends Term {
	contains Term operand
	POSTFIX_UNARY_OPERATOR operator
}
class BinaryOperation extends Term {
	contains Term left
	contains Term right
	BINARY_OPERATOR operator
}

enum POSTFIX_UNARY_OPERATOR {
	CONVERSE as '˘'
	KLEENE as '*'
	PLUS as '⁺'
	COMPLEMENT as 'ᶜ'
}
enum BINARY_OPERATOR {
	INTERSECTION as '∩'
	UNION as '∪'
	MINUS as '\\'
	COMPOSITION as ';'
}